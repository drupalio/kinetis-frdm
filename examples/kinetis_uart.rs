//! A blinky-LED example application
//! This example uses kinetis-rs.

#![no_std]
#![no_main]
#![feature(alloc, collections, asm)]
#![crate_type="staticlib"]

// ****************************************************************************
//
// Imports
//
// ****************************************************************************

extern crate kinetis_frdm;
extern crate alloc;
#[macro_use]
extern crate collections;
extern crate cortex_m;

use kinetis_frdm::board::uart;
use cortex_m::asm::nop;
use core::fmt::Write;

// ****************************************************************************
//
// Public Types
//
// ****************************************************************************

// None

// ****************************************************************************
//
// Private Types
//
// ****************************************************************************

// None

// ****************************************************************************
//
// Public Data
//
// ****************************************************************************

pub static mut USELESS_GLOBAL_VALUE: usize = 0x123456;

// ****************************************************************************
//
// Public Functions
//
// ****************************************************************************


pub fn delay(count: u32) {
    for _ in 0..count {
        nop();
    }
}

#[no_mangle]
pub extern "C" fn main() {
    let mut u = uart::Uart::new(
        uart::UartId::Uart1,
        115200,
        uart::NewlineMode::SwapLFtoCRLF);
    loop {
        let _ = write!(u, "This is a test\n");
        delay(1_000);
    }
}

// ****************************************************************************
//
// Private Functions
//
// ****************************************************************************

// None

// ****************************************************************************
//
// End Of File
//
// ****************************************************************************
